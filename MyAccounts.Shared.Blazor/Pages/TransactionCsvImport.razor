@page "/transactioncsvimport"
@inject ISnackbar Snackbar
@inject AppService AppService
@inject IDialogService DialogService
@attribute [Authorize(Roles = "Administrator")]
@inject AppService AppService
@inject ISnackbar Snackbar
@inject HttpClient HttpClient
@inject NavigationService NavigationService
@attribute [Authorize(Roles = "Administrator")]
@using CsvHelper.Configuration
@using Color = MudBlazor.Color
@using Size = MudBlazor.Size

<PageTitle>Transaction Import</PageTitle>

<div class="mb-3">
    <MudText Typo="Typo.h3">Transaction Import</MudText>
    <MudText Typo="Typo.body1">Import transactions from a CSV file.</MudText>
</div>

<div>
    <MudFileUpload T="IBrowserFile" FilesChanged="@(async args => registerModel.Photo = await UploadCsvAsync(args))" Accept=".csv">
        <ActivatorContent>
            <MudButton HtmlTag="label" Variant="Variant.Filled" Color="MudBlazor.Color.Primary" StartIcon="@Icons.Material.Filled.CloudUpload">
                Upload CSV
            </MudButton>
        </ActivatorContent>
    </MudFileUpload>
</div>

@code {
    [CascadingParameter]
    MudDialogInstance? MudDialog { get; set; }

    private RegisterModel registerModel = new();

    private void OnClose()
    {
        MudDialog?.Close();
        NavigationService.NotifyStateChanged();

    }

    private async Task<string?> UploadCsvAsync(IBrowserFile file)
    {
        if (file.ContentType != "text/csv")
        {
            Snackbar.Add("Only CSV files can be uploaded.", Severity.Error);
            return null;
        }

        try
        {
            AppService.UploadCsvAsync(file);
            MudDialog?.Close();
            NavigationService.NotifyStateChanged();
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }

        return null;
    }
}
